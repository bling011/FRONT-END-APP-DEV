{"ast":null,"code":"const BASE_URL = 'http://127.0.0.1:8000/api/todos/';\nexport const getTodos = async () => {\n  const response = await fetch(BASE_URL);\n  return response.json();\n};\nexport const addTodo = async title => {\n  const response = await fetch(BASE_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      title,\n      completed: false\n    })\n  });\n  return response.json();\n};\nexport const updateTodo = async (id, updatedFields) => {\n  const response = await fetch(`${BASE_URL}${id}/`, {\n    method: 'PATCH',\n    // Ensure this is PATCH\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(updatedFields)\n  });\n  if (!response.ok) throw new Error('Failed to update todo');\n  return response.json();\n};\nexport const deleteTodo = async id => {\n  await fetch(`${BASE_URL}${id}/`, {\n    method: 'DELETE'\n  });\n};","map":{"version":3,"names":["BASE_URL","getTodos","response","fetch","json","addTodo","title","method","headers","body","JSON","stringify","completed","updateTodo","id","updatedFields","ok","Error","deleteTodo"],"sources":["C:/Users/rovic/app dev sambling/todo-frontend/src/api.js"],"sourcesContent":["const BASE_URL = 'http://127.0.0.1:8000/api/todos/';\n\nexport const getTodos = async () => {\n  const response = await fetch(BASE_URL);\n  return response.json();\n};\n\nexport const addTodo = async (title) => {\n  const response = await fetch(BASE_URL, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ title, completed: false }),\n  });\n  return response.json();\n};\n\nexport const updateTodo = async (id, updatedFields) => {\n  const response = await fetch(`${BASE_URL}${id}/`, {\n    method: 'PATCH', // Ensure this is PATCH\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(updatedFields),\n  });\n\n  if (!response.ok) throw new Error('Failed to update todo');\n  return response.json();\n};\n\nexport const deleteTodo = async (id) => {\n  await fetch(`${BASE_URL}${id}/`, { method: 'DELETE' });\n};\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,kCAAkC;AAEnD,OAAO,MAAMC,QAAQ,GAAG,MAAAA,CAAA,KAAY;EAClC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,CAAC;EACtC,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAOC,KAAK,IAAK;EACtC,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAACH,QAAQ,EAAE;IACrCO,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEL,KAAK;MAAEM,SAAS,EAAE;IAAM,CAAC;EAClD,CAAC,CAAC;EACF,OAAOV,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMS,UAAU,GAAG,MAAAA,CAAOC,EAAE,EAAEC,aAAa,KAAK;EACrD,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,GAAGc,EAAE,GAAG,EAAE;IAChDP,MAAM,EAAE,OAAO;IAAE;IACjBC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACI,aAAa;EACpC,CAAC,CAAC;EAEF,IAAI,CAACb,QAAQ,CAACc,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EAC1D,OAAOf,QAAQ,CAACE,IAAI,CAAC,CAAC;AACxB,CAAC;AAED,OAAO,MAAMc,UAAU,GAAG,MAAOJ,EAAE,IAAK;EACtC,MAAMX,KAAK,CAAC,GAAGH,QAAQ,GAAGc,EAAE,GAAG,EAAE;IAAEP,MAAM,EAAE;EAAS,CAAC,CAAC;AACxD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}